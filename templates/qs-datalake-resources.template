{
  "AWSTemplateFormatVersion"  : "2010-09-09",
  "Description"               : "Data lake quick start deployment template",
  "Parameters"                : {


                "AdminEmailID"          : {
                  "Description"           : "Admin email id - email will be sent to this address on stack completion with further instructions( check inbox/spam in about 15-20mins)",
                  "Type"                  : "String",
                  "AllowedPattern"        : "^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$",
                  "ConstraintDescription" : "Can contain only ASCII characters."

                },
                "InstanceType"      : {
                      "Description"           : "EC2 WebServer instance type for datalake web portal",
                      "Type"                  : "String",
                      "Default"               : "m1.medium",
                      "AllowedValues"         : [ "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge"],
                      "ConstraintDescription" : "Must be a valid EC2 instance type"
                },

                "DBName": {
                  "Default"                     : "awsdatalakeqs",
                  "Description"                 : "DB Name must start with a letter & no special characters(MinLength=4;MaxLength=20)",
                  "Type"                        : "String",
                  "MinLength"                   : "4",
                  "MaxLength"                   : "16",
                  "AllowedPattern"              : "[a-zA-Z][a-zA-Z0-9]*",
                  "ConstraintDescription"       : "DB name must start with a letter & no special characters(Min=4;Max=20 AlphaNumerics)"
                },
                "MasterUsername": {
                  "Default"                     : "admin",
                  "Description"                 : "DB Username must start with a letter & no special characters(MinLength=4;MaxLength=20)",
                  "Type"                        : "String",
                  "MinLength"                   : "4",
                  "MaxLength"                   : "16",
                  "AllowedPattern"              : "[a-zA-Z][a-zA-Z0-9]*",
                  "ConstraintDescription"       : "DB Username must start with a letter & no special characters(Min=4;Max=20 AlphaNumerics)"
                },
                "MasterUserPassword": {
                  "Description"                 : "DB Password must start with a letter,contain atleast one upper case letter & no special characters(MinLength=8;MaxLength=20)",
                  "Type"                        : "String",
                  "NoEcho"                      : "true",
                  "MinLength"                   : "8",
                  "MaxLength"                   : "16",
                  "AllowedPattern"              : "[a-zA-Z]*[A-Z]+[a-zA-Z0-9]*",
                  "ConstraintDescription"       : "DB Password must start with a letter,contain atleast one upper case letter, one number  & no special characters(Min=8;Max=20 AlphaNumerics)"
                },
                "DBInstanceClass" : {
                  "Default"                     : "db.t2.small",
                  "Description"                 : "Database instance class",
                  "Type"                        : "String",
                  "AllowedValues"               : [ "db.t2.micro", "db.t2.small", "db.t2.medium", "db.t2.large", "db.m4.large", "db.m4.xlarge", "db.m4.2xlarge", "db.m4.4xlarge", "db.m4.10xlarge" ],
                  "ConstraintDescription"       : "must select a valid RDS database class."
                },
                "AllocatedStorage" : {
                  "Default"                     : "5",
                  "Description"                 : "Size of the database(Gb) Range: 5~1024Gb",
                  "Type"                        : "Number",
                  "MinValue"                    : "5",
                  "MaxValue"                    : "1024",
                  "ConstraintDescription"       : "RDSAllocatedStorage must be between 5 and 1024Gb."
                },
                "NodeType" : {
                  "Default"                     : "dc1.large",
                  "Description"                 : "Redshift node type",
                  "Type"                        : "String",
                  "AllowedValues"               : [ "dc1.large", "dw.hs1.xlarge","dw1.xlarge", "dw1.8xlarge", "dw2.large", "dw2.8xlarge"],
                  "ConstraintDescription"       : "must select a valid Redshift node type."
                },
                "ClusterType" : {
                  "Default"                     : "single-node",
                  "Description"                 : "Redshift instance type",
                  "Type"                        : "String",
                  "AllowedValues"               : [ "single-node", "multi-node"],
                  "ConstraintDescription"       : "must select a valid Redshift cluster type."
                },
                "NumberOfNodes" : {
                  "Description"                 : "Number of nodes in the redshift cluster(=1 if single-node)",
                  "Type"                        : "Number",
                  "Default"                     : "1"
                },
                "QSS3BucketName": {
                  "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
                  "ConstraintDescription": "AWS Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
                  "Default": "quickstart-reference",
                  "Description": "S3 bucket name for the AWS Quick Start assets.AWS Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
                  "Type": "String"
              },
                "QSS3KeyPrefix": {
                    "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
                    "ConstraintDescription": "AWS Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
                    "Default": "datalake-latest",
                    "Description": "S3 key prefix for the AWS Quick Start assets.AWS Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
                    "Type": "String"
                },

                "NoOfAzs"         : {
                      "Description": "Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.",
                      "Type"      : "String",
                      "Default"    : "2"
                  },

                "VPCZoneIdentifier1"           : {
                  "Description": "VPCZoneIdentifier1",
                  "Type": "String"
                },
                "VPCZoneIdentifier2"           : {
                  "Description": "VPCZoneIdentifier2",
                  "Type": "String"
                },
                "RedshiftVpcSecurityGroupIds" : {
                  "Description": "RedshiftVpcSecurityGroupIds",
                  "Type": "String"},
                "RDSVpcSecurityGroups"        : {
                  "Description": "RDSVpcSecurityGroups",
                  "Type": "String"},
                "WebserverSecurityGroups"     : {
                  "Description": "WebserverSecurityGroups",
                  "Type": "String"},
                "SubnetId1"                   : {
                  "Description": "SubnetId1",
                  "Type": "String"},
                "SubnetId2"                   : {
                    "Description": "SubnetId2",
                    "Type": "String"}
  },



   "Conditions" : {
                "IsMultiNodeCluster" : {
                  "Fn::Equals" : [{ "Ref" : "ClusterType" }, "multi-node" ]
                }
    },


  "Mappings"  : {
              "AWSAMItoRegionMap" :
              {
                "AMI": {
                        "AMLXPVM": "amazon/amzn-ami-pv-2016.09.1.20170119-x86_64-ebs"
                        },
                "us-east-1": {
                        "AMLXPVM" :  "ami-7a3dd76c"
                      },
                "us-west-2": {
                        "AMLXPVM" :  "ami-8a72cdea"
                      }
              },

              "RDSEngineVersionMapping" : {
                "mysql"                       : { "latest" : "5.7"}
                            },

              "AWSInfoRegionMap": {
                          "us-east-1": {
                              "Partition": "aws",
                              "QuickStartS3URL": "https://s3-us-west-2.amazonaws.com"
                          },
                          "us-west-2": {
                              "Partition": "aws",
                              "QuickStartS3URL": "https://s3-us-west-2.amazonaws.com"
                          }
                        }
      },
  "Resources" : {

    "RDSdbSubnetGroup" : {
        "Type"          : "AWS::RDS::DBSubnetGroup",
        "Properties"    : {
          "DBSubnetGroupDescription"  : "Subnets available for the RDS DB Instance",
          "SubnetIds"                 : [{"Ref": "SubnetId1"},{"Ref": "SubnetId2"}]
        }
      },
    "RDSdb" : {
        "Type"          : "AWS::RDS::DBInstance",
        "Properties"    : {
          "DBName"                    : { "Ref"   : "DBName" },
          "Port"                      : "3306",
          "AllocatedStorage"          : { "Ref"   : "AllocatedStorage" },
          "DBInstanceClass"           : { "Ref"   : "DBInstanceClass" },
          "Engine"                    : "mysql",
          "EngineVersion"             : { "Fn::FindInMap" : [ "RDSEngineVersionMapping", "mysql", "latest"]},
          "MasterUsername"            : { "Ref"   : "MasterUsername" } ,
          "MasterUserPassword"        : { "Ref"   : "MasterUserPassword" },
          "StorageType"               : "gp2",
          "DBSubnetGroupName"         : { "Ref"   : "RDSdbSubnetGroup" },
          "VPCSecurityGroups"         : [{ "Ref"   : "RDSVpcSecurityGroups"}],
          "PubliclyAccessible"        : "true",
          "MultiAZ"                   : "true",
          "DBInstanceIdentifier"      : {"Fn::Join" : [ "",[ "datalake-rds-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
          "Tags" : [
            {"Key" : "solution", "Value" : {"Fn::Join" : [ "",[ "datalake-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]}  },
            {"Key" : "Name", "Value" : {"Fn::Join" : [ "",[ "datalake-rds-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]}  }
          ]
        },
        "DeletionPolicy" : "Delete"
      },



        "RedshiftClusterParameterGroup" : {
            "Type"          : "AWS::Redshift::ClusterParameterGroup",
            "Properties"    : {
              "Description"               : "Cluster parameter group",
              "ParameterGroupFamily"      : "redshift-1.0",
              "Parameters"                : [ {"ParameterName" : "enable_user_activity_logging", "ParameterValue" : "true"}]
            }
          },

        "RedshiftCluster"   : {
          "Type"            : "AWS::Redshift::Cluster",
          "Properties"      : {
            "DBName"                      : { "Ref" : "DBName" },
            "MasterUsername"              : { "Ref" : "MasterUsername" },
            "MasterUserPassword"          : { "Ref" : "MasterUserPassword" },
            "NodeType"                    : { "Ref" : "NodeType" },
            "ClusterType"                 : { "Ref" : "ClusterType" },
            "NumberOfNodes"               : { "Fn::If"  : [ "IsMultiNodeCluster", {"Ref" : "NumberOfNodes"}, {"Ref" : "AWS::NoValue"}]},
            "ClusterParameterGroupName"   : { "Ref"     : "RedshiftClusterParameterGroup" },
            "VpcSecurityGroupIds"         : [{ "Ref": "RedshiftVpcSecurityGroupIds"}] ,
            "ClusterSubnetGroupName"      : { "Ref" : "RedshiftClusterSubnetGroup" }
                    }
        },

        "RedshiftClusterSubnetGroup" : {
            "Type"          : "AWS::Redshift::ClusterSubnetGroup",
            "Properties"    : {
                "Description"             : "Cluster subnet group",
                "SubnetIds"                 : [{"Ref": "SubnetId1"},{"Ref": "SubnetId2"}]
                            }
            },

    "ElasticsearchDomain": {
       "Type": "AWS::Elasticsearch::Domain",
       "Properties": {
         "DomainName": {"Fn::Join" : [ "",[ "dles-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
          "ElasticsearchVersion": "5.1",
          "ElasticsearchClusterConfig": {
                                     "DedicatedMasterEnabled"      : "false",
                                     "InstanceCount"               : "1",
                                      "ZoneAwarenessEnabled"        : false,
                                     "InstanceType"                : "t2.medium.elasticsearch"
                                       },
         "EBSOptions"                : {
                                     "EBSEnabled": true,
                                     "Iops": 0,
                                     "VolumeSize": 20,
                                     "VolumeType": "gp2"
                       },
         "SnapshotOptions"           : {
                                     "AutomatedSnapshotStartHour": "0"
         },
         "AccessPolicies": {
           "Version": "2012-10-17",
           "Statement": [{
             "Effect": "Allow",
             "Principal": {
               "AWS": ["*"]
             },
             "Action": ["es:*"],
             "Resource"  : {"Fn::Join" : [ "",[ "arn:aws:es:",{"Ref":"AWS::Region"},":",{"Ref":"AWS::AccountId"},":domain/dles-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] }, "/*" ]]}
           }]
         },
         "AdvancedOptions": {
           "rest.action.multi.allow_explicit_index": "true"
         },
          "Tags" : [
            {"Key" : "solution", "Value" : {"Fn::Join" : [ "",[ "datalake-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]}  },
            {"Key" : "Name", "Value" : {"Fn::Join" : [ "",[ "datalake-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]}  }
          ]
       }
     },

              "LambdaExecutionRole" : {
                                    "Type"        : "AWS::IAM::Role",
                                    "DependsOn"   : "RedshiftSecondaryRole",
                                    "Properties"  : {
                                                  "RoleName"       : {"Fn::Join" : [ "",[ "datalake-lambdaExecutionRole-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
                                                      "AssumeRolePolicyDocument"  : {
                                                          "Version"   : "2012-10-17",
                                                          "Statement" : [{
                                                                  "Effect"    : "Allow",
                                                                  "Principal" : {
                                                                          "Service"   : [ "lambda.amazonaws.com" ]
                                                              },
                                                                  "Action"    :  [ "sts:AssumeRole" ]
                                                              }]
                                                    },

                                                      "Path"        : "/",
                                                      "Policies"    : [{
                                                            "PolicyName"        :{"Fn::Join" : [ "",[ "datalake-catlamb-policy-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
                                                            "PolicyDocument"    : {
                                                                      "Version"       : "2012-10-17",
                                                                      "Statement"     : [
                                                                                   {
                                                                                        "Effect": "Allow",
                                                                                        "Action": "s3:*",
                                                                                        "Resource": "*"
                                                                                    },
                                                                                    {
                                                                                         "Effect": "Allow",
                                                                                         "Action": [
                                                                                             "logs:CreateLogGroup",
                                                                                             "logs:CreateLogStream",
                                                                                             "logs:PutLogEvents",
                                                                                             "logs:DescribeLogStreams"
                                                                                         ],
                                                                                         "Resource": ["arn:aws:logs:*:*:*" ]
                                                                                     },
                                                                                    {
                                                                                       "Effect": "Allow",
                                                                                       "Action": [
                                                                                           "es:*"
                                                                                       ],
                                                                                       "Resource":[{"Fn::Join" : [ "", ["arn:aws:es:::domain/dles-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] },":*"]]}]
                                                                                   },
                                                                                   {
                                                                                       "Effect": "Allow",
                                                                                       "Action": "iam:PassRole",
                                                                                       "Resource": [
                                                                                           {"Fn::Join" : [ "",[ "arn:aws:iam:::role/",{"Ref":"RedshiftSecondaryRole"} ]  ] },
                                                                                           {"Fn::Join" : [ "",[ "arn:aws:redshift:::",{"Ref":"RedshiftCluster"},"/",{"Ref": "MasterUsername"} ]  ] }
                                                                                       ]
                                                                                   }
                                                                  ]}}]
                                                          }
                                      },

                  "RedshiftSecondaryRole" : {
                                        "Type"        : "AWS::IAM::Role",
                                        "Properties"  : {
                                                      "RoleName"       : {"Fn::Join" : [ "",[ "datalake-RedshiftSecondaryRole-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
                                                          "AssumeRolePolicyDocument"  : {
                                                              "Version"   : "2012-10-17",
                                                              "Statement" : [{
                                                                      "Effect"    : "Allow",
                                                                      "Principal" : {
                                                                              "Service"   : [ "redshift.amazonaws.com" ]
                                                                  },
                                                                      "Action"    :  [ "sts:AssumeRole" ]
                                                                  }]
                                                        },

                                                          "Path"        : "/",
                                                          "Policies"    : [{
                                                                "PolicyName"        :{"Fn::Join" : [ "",[ "datalake-RedshiftSecondaryRole-policy-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
                                                                "PolicyDocument"    : {
                                                                          "Version"       : "2012-10-17",
                                                                          "Statement"     : [
                                                                                       {
                                                                                            "Effect": "Allow",
                                                                                            "Action": "s3:*",
                                                                                            "Resource": {"Fn::Join" : [ "", ["arn:aws:s3:::datalake-", { "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] },"/*"]]}
                                                                                        }
                                                                      ]}}]
                                                              }
                                          },

              "LambdafunctionES": {
                                   "DependsOn"          : "WebserverWaitCondtion",
                                   "Type"               : "AWS::Lambda::Function",
                                   "Properties"         : {
                                                    "FunctionName": {"Fn::Join" : [ "",[ "datalake-catlamb-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
                                                    "Handler"     : "lambda_function.lambda_handler",
                                                    "Role"        : { "Fn::GetAtt"  :   ["LambdaExecutionRole", "Arn"] },
                                                    "Code"        : {

                                                                    "S3Bucket"    : {"Fn::Join" : [ "",[ "datalake-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
                                                                    "S3Key"       : "lambdas/writetoESX.zip"
                                                                  },
                                                    "Runtime": "python2.7",
													"Timeout": "180"
                                   }
                                 },

           "DatalakeFirehoseStream": {
                                           "Type": "AWS::KinesisFirehose::DeliveryStream",
                                           "DependsOn"    : "FirehoseRole",
                                                       "Properties": {
                                                       "DeliveryStreamName" : {"Fn::Join" : [ "",[ "datalake-firehose-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
                                                       "ElasticsearchDestinationConfiguration": {
                                                       "BufferingHints": {
                                                       "IntervalInSeconds": 60,
                                                       "SizeInMBs": 1
                                                       },
                                           "CloudWatchLoggingOptions": {
                                                       "Enabled": true,
                                                       "LogGroupName": {"Fn::Join" : [ "",[ "/aws/kinesisfirehose/datalake-firehose-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
                                                       "LogStreamName": "ElasticsearchDelivery"
                                                       },
                                           "DomainARN": {"Fn::Join":["",["arn:aws:es:",{"Ref":"AWS::Region"},":",{"Ref":"AWS::AccountId"},":domain/",{"Ref":"ElasticsearchDomain"}]]},
                                           "IndexName": "datalakedeliverystream",
                                           "IndexRotationPeriod": "NoRotation",
                                           "TypeName" : "fromFirehose",
                                           "RetryOptions": {
                                                       "DurationInSeconds": "60"
                                           },
                                           "RoleARN": { "Fn::GetAtt" : ["FirehoseRole", "Arn"] },
                                           "S3BackupMode": "AllDocuments",
                                           "S3Configuration": {
                                                       "BucketARN": {"Fn::Join":["",["arn:aws:s3:::",{"Ref":"DataLakeS3Bucket"}]]},
                                                       "BufferingHints": {
                                                       "IntervalInSeconds": "60",
                                                       "SizeInMBs": "5"
                                           },
                                           "CompressionFormat": "UNCOMPRESSED",

                                           "Prefix": "FirehoseDatalake/",
                                           "RoleARN": { "Fn::GetAtt" : ["FirehoseRole", "Arn"] },
                                           "CloudWatchLoggingOptions" : {
                                                       "Enabled" : true,
                                                       "LogGroupName" : {"Fn::Join" : [ "",[ "/aws/kinesisfirehose/datalake-firehose-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
                                                       "LogStreamName" : "S3Delivery"
                                           }
                                           }
                                           }
                                           }
                                         },

			"DatalakeFirehoseLogGroup": {
										  "Type" : "AWS::Logs::LogGroup",
										  "DependsOn"    : "DatalakeFirehoseStream",
										  "Properties" : {
											"LogGroupName" : {"Fn::Join" : [ "",[ "/aws/kinesisfirehose/datalake-firehose-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]}
										  }
										},

			"DatalakeFirehoseESLogStream": {
										  "Type" : "AWS::Logs::LogStream",
										  "DependsOn"    : "DatalakeFirehoseLogGroup",
										  "Properties" : {
											"LogGroupName" : {"Fn::Join" : [ "",[ "/aws/kinesisfirehose/datalake-firehose-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
											"LogStreamName" : "ElasticsearchDelivery"
										  }
										},

			"DatalakeFirehoseS3LogStream": {
										  "Type" : "AWS::Logs::LogStream",
										  "DependsOn"    : "DatalakeFirehoseLogGroup",
										  "Properties" : {
											"LogGroupName" : {"Fn::Join" : [ "",[ "/aws/kinesisfirehose/datalake-firehose-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
											"LogStreamName" : "S3Delivery"
										  }
										},

			"FirehoseRole" : {
                       "Type"        : "AWS::IAM::Role",
                       "Properties"  : {
                                     "RoleName"       : {"Fn::Join" : [ "",[ "Datalake-FirehoseRole-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
                                         "AssumeRolePolicyDocument"  : {
                                             "Version"   : "2012-10-17",
                                             "Statement" : [{
                                                     "Effect"    : "Allow",
                                                     "Principal" : {
                                                             "Service"   : [ "firehose.amazonaws.com" ]
                                                 },
                                                     "Action"    :  [ "sts:AssumeRole" ]
                                                 }]
                                       },

                                         "Path"        : "/",
                                         "Policies"    : [{
                                               "PolicyName"        :{"Fn::Join" : [ "",[ "datalake-firehose-policy-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
                                               "PolicyDocument"    : {
                                                         "Version"       : "2012-10-17",
                                                         "Statement": [
                                                           {

                                                             "Effect": "Allow",
                                                             "Action": [
                                                               "s3:AbortMultipartUpload",
                                                               "s3:GetBucketLocation",
                                                               "s3:GetObject",
                                                               "s3:ListBucket",
                                                               "s3:ListBucketMultipartUploads",
                                                               "s3:PutObject"
                                                             ],
                                                             "Resource": [
                                                               {"Fn::Join":["",["arn:aws:s3:::",{"Ref":"DataLakeS3Bucket"},"/*"]]},
                                                               {"Fn::Join":["",["arn:aws:s3:::",{"Ref":"DataLakeS3Bucket"}]]}
                                                             ]
                                                           },
                                                           {

                                                             "Effect": "Allow",
                                                             "Action": [
                                                               "lambda:InvokeFunction",
                                                               "lambda:GetFunctionConfiguration"
                                                             ],
                                                           "Resource": {"Fn::Join": ["",["arn:aws:lambda:",{"Ref":"AWS::Region"},":",{"Ref":"AWS::AccountId"},":function:%FIREHOSE_DEFAULT_FUNCTION%:%FIREHOSE_DEFAULT_VERSION%"]]}
                                                           },
                                                           {

                                                             "Effect": "Allow",
                                                             "Action": [
                                                               "es:DescribeElasticsearchDomain",
                                                               "es:DescribeElasticsearchDomains",
                                                               "es:DescribeElasticsearchDomainConfig",
                                                               "es:ESHttpPost",
                                                               "es:ESHttpPut"
                                                             ],
                                                             "Resource": [
                                                               {"Fn::Join":["",["arn:aws:es:",{"Ref":"AWS::Region"},":",{"Ref":"AWS::AccountId"},":domain/",{"Ref":"ElasticsearchDomain"}]]},
                                                               {"Fn::Join":["",["arn:aws:es:",{"Ref":"AWS::Region"},":",{"Ref":"AWS::AccountId"},":domain/",{"Ref":"ElasticsearchDomain"},"/*"]]}
                                                             ]
                                                           },
                                                           {

                                                             "Effect": "Allow",
                                                             "Action": [
                                                               "es:ESHttpGet"
                                                             ],
                                                             "Resource": [
                                                               {"Fn::Join":["",["arn:aws:es:",{"Ref":"AWS::Region"},":",{"Ref":"AWS::AccountId"},":domain/",{"Ref":"ElasticsearchDomain"},"/_all/_settings"]]},
                                                               {"Fn::Join":["",["arn:aws:es:",{"Ref":"AWS::Region"},":",{"Ref":"AWS::AccountId"},":domain/",{"Ref":"ElasticsearchDomain"},"/_cluster/stats"]]},
                                                               {"Fn::Join":["",["arn:aws:es:",{"Ref":"AWS::Region"},":",{"Ref":"AWS::AccountId"},":domain/",{"Ref":"ElasticsearchDomain"},"/_nodes"]]},
                                                               {"Fn::Join":["",["arn:aws:es:",{"Ref":"AWS::Region"},":",{"Ref":"AWS::AccountId"},":domain/",{"Ref":"ElasticsearchDomain"},"/_nodes/stats"]]},
                                                               {"Fn::Join":["",["arn:aws:es:",{"Ref":"AWS::Region"},":",{"Ref":"AWS::AccountId"},":domain/",{"Ref":"ElasticsearchDomain"},"/_nodes/*/stats"]]},
                                                               {"Fn::Join":["",["arn:aws:es:",{"Ref":"AWS::Region"},":",{"Ref":"AWS::AccountId"},":domain/",{"Ref":"ElasticsearchDomain"},"/_stats"]]},
                                                               {"Fn::Join":["",["arn:aws:es:",{"Ref":"AWS::Region"},":",{"Ref":"AWS::AccountId"},":domain/",{"Ref":"ElasticsearchDomain"},"/datalakedeliverystream*/_mapping/fromFirehose"]]},
                                                               {"Fn::Join":["",["arn:aws:es:",{"Ref":"AWS::Region"},":",{"Ref":"AWS::AccountId"},":domain/",{"Ref":"ElasticsearchDomain"},"/datalakedeliverystream*/_stats"]]}
                                                             ]
                                                           },
                                                           {

                                                             "Effect": "Allow",
                                                             "Action": [
                                                               "logs:CreateLogGroup",
                                                               "logs:CreateLogStream",
                                                               "logs:PutLogEvents",
                                                               "logs:DescribeLogStreams"
                                                             ],
                                                             "Resource": [
                                                               "arn:aws:logs:*:*:*",
															   {"Fn::Join":["",["arn:aws:logs:",{"Ref":"AWS::Region"},":",{"Ref":"AWS::AccountId"},":log-group:/aws/kinesisfirehose/datalake-firehose-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] },":log-stream:*"]]}
                                                             ]
                                                           }
                                                         ]
                                                     }}]
                                             }
                         },


                 "DataLakeS3Bucket" : {
                   "Type" : "AWS::S3::Bucket",
                   "DeletionPolicy" : "Delete",
                   "Properties": {
                         "AccessControl" : "PublicReadWrite",
                         "BucketName"    : {"Fn::Join" : [ "",[ "datalake-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
                         "VersioningConfiguration": {
                                             "Status": "Enabled"
                                           },
                         "LifecycleConfiguration" : {
                           "Rules" : [{
                               "ExpirationInDays" : 45,
                               "Status" : "Enabled",
                               "Id" : "DatalakeLCP",
                               "Transitions" : [{
                                   "TransitionInDays": 30,
                                   "StorageClass": "GLACIER"
                               }]
                           }]
                        }
                       }
                     },

                 "S3InterimBucketPolicy" : {
                       "Type"        : "AWS::S3::BucketPolicy",
                       "DependsOn"   : "DataLakeS3Bucket",
                       "Properties"  : {
                                       "Bucket"          : {"Ref" : "DataLakeS3Bucket"},
                                       "PolicyDocument"  : {
                                                           "Statement":[
                                                             {
                                                                      "Sid": "AWSCloudTrailAclCheckintermediate",
                                                                      "Effect": "Allow",
                                                                      "Principal": {
                                                                          "Service": "cloudtrail.amazonaws.com"
                                                                      },
                                                                      "Action": "s3:GetBucketAcl",
                                                                      "Resource": {"Fn::Join" : ["",["arn:aws:s3:::datalake-",{"Ref":"AWS::AccountId"},"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]}
                                                                   },
                                                                   {
                                                                      "Sid": "AWSCloudTrailWriteintermediate",
                                                                      "Effect": "Allow",
                                                                      "Principal": {
                                                                          "Service": "cloudtrail.amazonaws.com"
                                                                      },
                                                                      "Action": "s3:PutObject",
                                                                      "Resource": {"Fn::Join" : ["",["arn:aws:s3:::datalake-",{"Ref":"AWS::AccountId"},"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] }, "/CloudTrailLogs/AWSLogs/",{"Ref":"AWS::AccountId"},"/*" ]]},
                                                                      "Condition": {
                                                                          "StringEquals": {
                                                                              "s3:x-amz-acl": "bucket-owner-full-control"
                                                                          }
                                                                      }
                                                                   }]
                                       }
                                     }
                       },

          "DatalakeCloudtrail" : {

                             "Type" : "AWS::CloudTrail::Trail",
                             "DependsOn" : "S3InterimBucketPolicy",
                             "Properties" : {
                                       "S3BucketName" : {"Fn::Join" : [ "",[ "datalake-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
                                       "S3KeyPrefix"  : "CloudTrailLogs",
                                       "IsLogging" : true
                                           }
                                         },

               "S3BucketPolicy" : {
                     "Type"        : "AWS::S3::BucketPolicy",
                     "DependsOn"   : ["DatalakeCloudtrail","FirehoseRole"],
                     "Properties"  : {
                                     "Bucket"          : {"Ref" : "DataLakeS3Bucket"},
                                     "PolicyDocument"  : {
                                                         "Statement":[{
                                                                       "Sid"               : "DenyIncorrectEncryptionHeader",
                                                                       "Effect"            : "Deny",
                                                                       "NotPrincipal"      : {
																								"AWS": {"Fn::Join" : [ "",[ "arn:aws:iam::",{ "Ref":"AWS::AccountId" },":role/Datalake-FirehoseRole-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
																								"Service": "firehose.amazonaws.com"
																							},
                                                                       "Action"            : "s3:PutObject",
                                                                       "Resource"          : {"Fn::Join" : ["",["arn:aws:s3:::datalake-",{"Ref":"AWS::AccountId"},"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] },"/*" ]]},
                                                                       "Condition": {
                                                                         "StringNotEquals": {
                                                                           "s3:x-amz-server-side-encryption": "AES256"
                                                                         }
                                                                       }

                                                           },
                                                           {
                                                                       "Sid"                 : "DenyUnEncryptedObjectUploads",
                                                                       "Effect"              : "Deny",
                                                                       "NotPrincipal"      : {
																								"AWS": {"Fn::Join" : [ "",[ "arn:aws:iam::",{ "Ref":"AWS::AccountId" },":role/Datalake-FirehoseRole-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
																								"Service": "firehose.amazonaws.com"
																							},
                                                                       "Action"              : "s3:PutObject",
                                                                       "Resource"            : {"Fn::Join" : ["",["arn:aws:s3:::datalake-",{"Ref":"AWS::AccountId"},"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] },"/*" ]]},
                                                                       "Condition": {
                                                                         "Null": {
                                                                           "s3:x-amz-server-side-encryption": "true"
                                                                         }
                                                                       }
                                                                     }

                                                         ]
                                     }

                     }
               },

    "EC2WebserverIamProfile" : {
                        "Type"        : "AWS::IAM::InstanceProfile",
                        "Properties"  : {
                                                    "Path" : "/",
                                                    "Roles" : [ { "Ref" : "EC2WebserverRole" }]
                                          }
                                },
    "EC2WebserverRole": {
       "Type"           : "AWS::IAM::Role",
       "Properties"     : {
          "RoleName"       : {"Fn::Join" : [ "",[ "dl-webserver-role-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
          "AssumeRolePolicyDocument"  : {
                                           "Version"  : "2012-10-17",
                                           "Statement": [ {
                                                          "Effect": "Allow",
                                                          "Principal": {
                                                                    "Service": [ "ec2.amazonaws.com" ]
                                                                        },
                                                          "Action": [ "sts:AssumeRole" ]
                                           } ]
          },
          "Path"      : "/",
          "Policies"  : [ {
             "PolicyName"       : {"Fn::Join" : [ "",[ "dl-webserver-policy-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]},
             "PolicyDocument"   : {
                                          "Version"   : "2012-10-17",
                                          "Statement" : [ {
                                                            "Effect": "Allow",
                                                            "Action": "*",
                                                            "Resource": "*"
														                              } ]
														     }
                        } ]
                        }
    },



    "WebServerGroup" : {
       "Type" : "AWS::AutoScaling::AutoScalingGroup",
       "Properties" : {
          "VPCZoneIdentifier"       : [{"Ref": "VPCZoneIdentifier1"},{"Ref": "VPCZoneIdentifier2"}],
          "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
          "MaxSize" : "1",
          "MinSize" : "1",
          "Tags" : [
            {"Key" : "solution", "Value" : {"Fn::Join" : [ "",[ "datalake-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]}, "PropagateAtLaunch" : "true"  },
            {"Key" : "Name", "Value" : {"Fn::Join" : [ "",[ "datalake-webserver-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] } ]]}, "PropagateAtLaunch" : "true"  }
          ]

       }
    },

    "LaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
       "Metadata"       : {
                "Comment1"     : "Configure the bootstrap helpers to install the Apache Web Server and PHP",

       "AWS::CloudFormation::Init" : {
         "configSets" : {
           "Install" : [ "Install", "Fileset" ]
         },

         "Fileset" : {
                      "files" : {
                        "/tmp/dl-auth.file": {
                    "content": {
                        "Fn::Join": [
                            "",
                            [ "DatabaseUserName|"    ,{"Ref":"MasterUsername"},"\n",
                              "DatabaseUserPassword|",{"Ref":"MasterUserPassword"},"\n"
                            ]
                                  ]
                      },
                    "mode": "000440",
                    "owner": "root",
                    "group": "root"
         }}},

         "Install" : {
         "packages" : {
                       "yum" : {
                                 "mysql-config"            : [],
                                 "mysql55-server"          : [],
                                 "php56w-mbstring"         : [],
                                 "php56w-mysql"            : [],
                                 "php56w-gd"               : [],
                                 "php56w-cli"              : [],
                                 "php56w"                  : [],
                                 "php56w-xml"              : [],
                                 "httpd"                   : [],
                                 "php56w-pgsql"            : []
                               }
                       },
         "services" : {
                       "sysvinit" : {
                                 "httpd"            : {"enabled" : "true", "ensureRunning" : "true"},
                                 "mysqld"           : {"enabled" : "true", "ensureRunning" : "true"}
                       }
                     }
                   }
                 }
            },
       "Properties": {
          "ImageId"                             : { "Fn::FindInMap" : [ "AWSAMItoRegionMap", { "Ref" : "AWS::Region" }, "AMLXPVM"]},
          "IamInstanceProfile"                  : { "Ref" : "EC2WebserverIamProfile"},
          "InstanceType"                        : { "Ref" : "InstanceType" },
          "SecurityGroups"                      : [{ "Ref" : "WebserverSecurityGroups"}],
          "UserData"            : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash -xe\n",
            "yum install -y aws-cfn-bootstrap\n",
            "wget "," ",{"Fn::FindInMap": ["AWSInfoRegionMap",{"Ref": "AWS::Region"}, "QuickStartS3URL"]},"/",{ "Ref": "QSS3BucketName"},"/",{ "Ref": "QSS3KeyPrefix"},"/scripts/repo/dlpackages.repo -O /etc/yum.repos.d/dlpackages.repo\n",
            "yum clean all\n",
            "/opt/aws/bin/cfn-init ",
            "         --stack ", { "Ref" : "AWS::StackName" },
            "         --resource LaunchConfig ",
            "         --configsets Install ",
            "         --region ", { "Ref" : "AWS::Region" }, "\n",
            "wget "," ",{"Fn::FindInMap": ["AWSInfoRegionMap", {"Ref": "AWS::Region"},"QuickStartS3URL"]},"/",{ "Ref": "QSS3BucketName"},"/",{ "Ref": "QSS3KeyPrefix"},"/scripts/configure.sh;cat configure.sh | tr -d '\r' > configure_l.sh;chmod 777 configure_l.sh;./configure_l.sh ",
            {"Ref":"AWS::AccountId"}," ",{"Ref":"AWS::Region"}," ",{"Ref":"AdminEmailID"}," ",
            { "Fn::GetAtt": [ "RDSdb", "Endpoint.Address" ] }," ",
            { "Fn::GetAtt" : [ "RedshiftCluster", "Endpoint.Address" ] }," ",
            { "Fn::GetAtt": [ "RedshiftSecondaryRole", "Arn" ] }," ",{"Ref":"RDSdb"}," ",{"Ref":"DBName"}," ",{"Ref":"RedshiftCluster"}," ",{"Ref":"DBName"}," ",
            {"Fn::GetAtt" : ["ElasticsearchDomain","DomainEndpoint"]}," ",
            {"Ref":"DataLakeS3Bucket"}," ",{"Ref":"AWS::StackId"}," ",{"Fn::Select": ["4",{"Fn::Split": ["-",{"Fn::Select" : [ "2",{"Fn::Split": ["/",{"Ref": "AWS::StackId"}]}]}]}]}," ",
            {"Ref":"AWS::StackName"}," ",{"Fn::Base64":{"Ref" : "WebserverWaitHandle"}}," ",{"Ref":"DatalakeFirehoseStream"}," ",{"Ref" : "DatalakeCloudtrail"}," ",
            {"Fn::FindInMap": ["AWSInfoRegionMap", {"Ref": "AWS::Region"},"QuickStartS3URL"]}," ",{"Ref": "QSS3BucketName"}," ",{"Ref": "QSS3KeyPrefix"},"\n"
                  ]]}},

           "BlockDeviceMappings" : [
               {
                  "DeviceName" : "/dev/sda1",
                  "Ebs" : {
                     "VolumeType" : "gp2",
                     "DeleteOnTermination" : "true",
                     "VolumeSize" : "30"
                  }
               }]
            }
        },


    "WebserverWaitHandle" : {
                              "Type"          : "AWS::CloudFormation::WaitConditionHandle",
                              "Properties"    : {}
    },

    "WebserverWaitCondtion" : {
                            "Type"            : "AWS::CloudFormation::WaitCondition",
                            "DependsOn"       : "WebServerGroup",
                            "Properties"      : {
                                                "Handle"      : {"Ref": "WebserverWaitHandle"},
                                                "Timeout"     : "800"
                            }

    }




  },
  "Outputs" : {

                "S3Bucket":
                {
                  "Description"               : "S3 Bucket",
                  "Value"                     : {"Ref" : "DataLakeS3Bucket"}
                },

                "ElasticSearchEndpoint":
                {
                  "Description"               : "ElasticSearch Endpoint",
                  "Value"                     : {"Fn::GetAtt" : ["ElasticsearchDomain","DomainEndpoint"]}
                },

                "lambdaFunction":
                {
                  "Description"                : "Lambda Function",
                  "Value"                      : {"Ref" : "LambdafunctionES"}
                },


                "RDSEndpoint":
                {
                  "Description"                 : "RDS endpoint",
                  "Value"                       : { "Fn::GetAtt": [ "RDSdb", "Endpoint.Address" ] }
                },

                "RedshiftClusterEndpoint":
                {
                  "Description"                 : "Redshift Cluster endpoint",
                  "Value"                       : { "Fn::GetAtt" : [ "RedshiftCluster", "Endpoint.Address" ] }
                },

                "FirehoseDeliveryStream":
                {
                  "Description"                 : "Firehose delivery stream",
                  "Value"                       : { "Ref" : "DatalakeFirehoseStream"}
                },

                "CloudTrail":
                {
                  "Description"                 : "CloudTrail",
                  "Value"                       : { "Ref" : "DatalakeCloudtrail"}
                },

                "Tags":
                {
                  "Description"                 : "Use this Tag for creating Resource Group",
                  "Value"                       : {"Fn::Join": ["",["Key=\"solution\" ; Value=\"","datalake-",{ "Ref":"AWS::AccountId" },"-",{"Fn::Select": ["4",{"Fn::Split": ["-",{ "Fn::Select" : [ "2",{ "Fn::Split": ["/",{"Ref": "AWS::StackId"} ] } ] } ] } ] },"\""]] }
                }

  }
}
